= Changelog

Here are the latest changes from the previous version, many of which are backward-incompatible.

== 2025-08-28

- switched the argument order for skips

Now, when the skip flag is set, the byte flag is popped as well as the opcode's
stack arguments, and if the byte flag is false, the stack arguments are restored
to the stack and then the opcode is skipped. This makes conditional jumps much
easier to write:

```
( jump to address if condition true )
%condition %addr JMP? DRP
```

vs.

```
( 
  this way is more inconvenient, resulting in the user being forced to swap a
  3-byte argument with a 1-byte argument, which is annoying.
)
%addr %condition JMP? DRP
```

== 2025-08-23

- refactored memory to use *big-endian order*
- replaced the `sys` opcode with a `nop`

== 2025-08-11

- swapped argument order for `add`, `xor`, and `and`

== 2025-07-18

- removed divide, sub, bitwise-or, multiply, and modulo to be implemented later in a separate "Math" device or through pseudo-instructions
- added simple `add`, `and`, `xor`, and `shf` as the primary math opcodes
- reworked `cmp` opcode to push 0, 1, or 255 rather than 2 separate bytes
- renamed `syn` instruction to `int` (for "interrupt")
- renamed `dbg` instruction to `sys` (for "sysinfo")
- abandoned the old assembly language (`moka`) and began implementing a new assembler in C

== the deep past

You can see the commit history for changes further back than 2025-07-18; this was
so long before I was close to "freezing" the features of the VM that I didn't 
bother to document them beyond the commit messages as I went along
